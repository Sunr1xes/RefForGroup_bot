import asyncio
import logging
from aiogram import Bot, Dispatcher, F, Router
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage
from config import API_KEY
from handlers.profile_1 import profile_handler
from handlers.help import help_handler, user_agreement_callback_handler
from handlers.referral_system import referral_callback_handler, referrals_handler
from handlers.registration import contact_handler, process_full_name, start_command, Registration
from handlers.admin_menu import admin_menu, change_balance, change_balance_command, delete_user_command, process_delete_user, AdminMenu 
from utils import process_check_membership 

#TODO —É–∂–µ —Å–¥–µ–ª–∞—Ç—å "–î–æ—Å—Ç—É–ø–Ω—É—é —Ä–∞–±–æ—Ç—É"
#TODO —Å–¥–µ–ª–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ, –ø—Ä–∞–≤–∏–ª–∞, —Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∞–º–∏ –∏ —Ç–¥ (—Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å, —á–µ–ª–æ–≤–µ–∫ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–∏–≤–æ–¥–∏—Ç—å –ª—é–¥–µ–π)
#TODO —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é
#TODO –Ω–∞ –ø–æ—Ç–æ–º: –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∏–ø–æ –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –∑–∞ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä 50 —Ä—É–±–ª–µ–π –∑–∞ –∏—Å—Ç–æ—Ä–∏—é –∏–ª–∏ –µ—â–µ —á—Ç–æ-–Ω–∏–±—É–¥—å


# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_KEY)  # type: ignore
storage = MemoryStorage()
dp = Dispatcher(bot=bot, storage=storage)
router = Router()

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
router.message.register(start_command, Command("start"))
router.message.register(admin_menu, Command("admin_menu"))
router.message.register(help_handler, Command("help"))
router.message.register(contact_handler, F.content_type == "contact")
router.message.register(profile_handler, F.text == "–ü—Ä–æ—Ñ–∏–ª—åüë§")
router.message.register(referrals_handler, F.text == "–†–µ—Ñ–µ—Ä–∞–ª—ãü´Ç")
router.message.register(help_handler, F.text == "–ü–æ–º–æ—â—åüÜò")


router.callback_query.register(referral_callback_handler, F.data == "generate_referral_url")
router.callback_query.register(process_check_membership, F.data == "check_user_in_group")
router.callback_query.register(user_agreement_callback_handler, F.data == "user_agreement")
router.callback_query.register(change_balance, F.data == "change_balance")
router.callback_query.register(process_delete_user, F.data == "delete_user")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
router.message.register(process_full_name, Registration.waiting_for_full_name)  # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ –§–ò–û
router.message.register(contact_handler, Registration.waiting_for_contact)    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
router.message.register(change_balance_command, AdminMenu.change_balance)
router.message.register(delete_user_command, AdminMenu.delete_user)


async def main():
    dp.include_router(router)

    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
